'''
linear padding => Franklin Reinter attack
'''

from math import gcd


ct1=10325552244302885022003171837381849975095949407526702902410354475381281210217631073736057862078133728909121247320927629926978814006457038922137521841134068681569029028917282617544918518074214511621942185504590521722720671533218763031992666492307515204937085606820533196390636775937607582710854558969936881953698840734479755909870625650468161296755821233987917721193780552086761286528988331975150490272323470536700795614925720895950062588028745594312264785985135816304727678992395908752940279723904256488072946483421746767014497746908921512124765781545209631253051982236039184375978405595308807361076172890330238043223
N=15809514644464227512282911247112679415992650454592586293943926655215717890721442034923036216350551481169110357156733340345398008798355568596695120883256257231385742441368241939772324171772101596320870827543370659423034945670950651247102862545960709117293503713751000306407141091014086053436164578457916498085686551070785729086216325930944649399500471164146966370307793387047364130017091509650841776826043563490445034433278707431854670045213628716331440896245850544132149719211345419777867110193442705763498614956253703851688665762173942427705382847016535913769196745369851925904710009802820158694088638394289675155941
pad1=13065777411150565557053034896289292318357463257360830070545209662598617872558396629882342016681757593608061149003998962525353806088437657361528006207390129797282096506000557474743847898520616444365331668124028984922779503708465448835419333977131879401931923511930285566597071970924411927442956716733811956365797928419130857607361068371120495606720548807805172018826119552950090373012359123273448506565366503116220412071754284042220586430704933207904287248333100593892139283460799699148609035505281041435595779835356431212412201438974142785358252757079555340898932658022508430177391646990514697737004662404514448946963
pad2=13480262840207401201924304600239479663601478604506191383049537299864270087226259605033434319863373818620306263597020193633724267074714628145766736015456330518348587384585554076919345553582265868461877639546393495436624425426410836842641048570552513093957848469989852152327602637111348111983048006675460854651494473328153232690694335585159268373661878719165951022241058476187580805094155057007924777968712657502680022965548923606584898810913037476493677618234518805492160828572358962479479350977311931600539030210731337105033756053093735622009132644454579318217666852533199465459069338457579931299286082676220006046260

ct2=10164858850865449176761575558272926563507614944355595841031958823102353603621525098468837063171714085534787283790972279217956020216924937636762457728848401740774382240869687776548984998301633798369194807313575781008167763312326669933653516815944893612079757677800946852795725858277045861136861235604652498368080539804131491723564145932132976549443368597967787505702949665721023646713160820464314562518564897966056858524597922654560150612354719154897845698884298245617905281267782747642773300204693879680626972616733035170146553507925113715367173284322826485601131871723803596815709379697782033167870514047656822155719
N2=15809514644464227512282911247112679415992650454592586293943926655215717890721442034923036216350551481169110357156733340345398008798355568596695120883256257231385742441368241939772324171772101596320870827543370659423034945670950651247102862545960709117293503713751000306407141091014086053436164578457916498085686551070785729086216325930944649399500471164146966370307793387047364130017091509650841776826043563490445034433278707431854670045213628716331440896245850544132149719211345419777867110193442705763498614956253703851688665762173942427705382847016535913769196745369851925904710009802820158694088638394289675155941
pad3=12839421446009968672794808707363442329650878075915699060626832694394520219026691564386919725440011578226322466816117911718458158099494386274755879983501409180353472531770718132269667886414226340128525242522881385365263386993407039898488888765821395393813270388403375609310980411219120048127422612937802273326501536759408309539236087958410439904027681253468301078750230699580802092263827163725334247306381356893989870114532424215277499138976365201829903815469620298491641428915161687991607266300628523977928893090933015332499622783262552991550676946456477005981405400726327752157439494461698185446526847091073711240134
pad4=629506930602667875576914371174497154359001277676139172144203391682219137507215430044738261553444889355827543103194885152901243068673745676365858752805912120858925057071656074516156988443063010655936881915795785710270646348881514600798865055995233788166292892332275521611023593040021596593160152622999514178432599207800306443844998131607046588207563132737543978001058849679063400643534761017222494597097036207576906550241479365739193553366478435335454150547508941668441823798611436732597828882895229598343980068038865739565430964344454349597030985617275495359442276041104992719252010117155672342089629110094342152955

#Sage:
'''
ct1=10325552244302885022003171837381849975095949407526702902410354475381281210217631073736057862078133728909121247320927629926978814006457038922137521841134068681569029028917282617544918518074214511621942185504590521722720671533218763031992666492307515204937085606820533196390636775937607582710854558969936881953698840734479755909870625650468161296755821233987917721193780552086761286528988331975150490272323470536700795614925720895950062588028745594312264785985135816304727678992395908752940279723904256488072946483421746767014497746908921512124765781545209631253051982236039184375978405595308807361076172890330238043223
N=15809514644464227512282911247112679415992650454592586293943926655215717890721442034923036216350551481169110357156733340345398008798355568596695120883256257231385742441368241939772324171772101596320870827543370659423034945670950651247102862545960709117293503713751000306407141091014086053436164578457916498085686551070785729086216325930944649399500471164146966370307793387047364130017091509650841776826043563490445034433278707431854670045213628716331440896245850544132149719211345419777867110193442705763498614956253703851688665762173942427705382847016535913769196745369851925904710009802820158694088638394289675155941
pad1=13065777411150565557053034896289292318357463257360830070545209662598617872558396629882342016681757593608061149003998962525353806088437657361528006207390129797282096506000557474743847898520616444365331668124028984922779503708465448835419333977131879401931923511930285566597071970924411927442956716733811956365797928419130857607361068371120495606720548807805172018826119552950090373012359123273448506565366503116220412071754284042220586430704933207904287248333100593892139283460799699148609035505281041435595779835356431212412201438974142785358252757079555340898932658022508430177391646990514697737004662404514448946963
pad2=13480262840207401201924304600239479663601478604506191383049537299864270087226259605033434319863373818620306263597020193633724267074714628145766736015456330518348587384585554076919345553582265868461877639546393495436624425426410836842641048570552513093957848469989852152327602637111348111983048006675460854651494473328153232690694335585159268373661878719165951022241058476187580805094155057007924777968712657502680022965548923606584898810913037476493677618234518805492160828572358962479479350977311931600539030210731337105033756053093735622009132644454579318217666852533199465459069338457579931299286082676220006046260

ct2=10164858850865449176761575558272926563507614944355595841031958823102353603621525098468837063171714085534787283790972279217956020216924937636762457728848401740774382240869687776548984998301633798369194807313575781008167763312326669933653516815944893612079757677800946852795725858277045861136861235604652498368080539804131491723564145932132976549443368597967787505702949665721023646713160820464314562518564897966056858524597922654560150612354719154897845698884298245617905281267782747642773300204693879680626972616733035170146553507925113715367173284322826485601131871723803596815709379697782033167870514047656822155719
N2=15809514644464227512282911247112679415992650454592586293943926655215717890721442034923036216350551481169110357156733340345398008798355568596695120883256257231385742441368241939772324171772101596320870827543370659423034945670950651247102862545960709117293503713751000306407141091014086053436164578457916498085686551070785729086216325930944649399500471164146966370307793387047364130017091509650841776826043563490445034433278707431854670045213628716331440896245850544132149719211345419777867110193442705763498614956253703851688665762173942427705382847016535913769196745369851925904710009802820158694088638394289675155941
pad3=12839421446009968672794808707363442329650878075915699060626832694394520219026691564386919725440011578226322466816117911718458158099494386274755879983501409180353472531770718132269667886414226340128525242522881385365263386993407039898488888765821395393813270388403375609310980411219120048127422612937802273326501536759408309539236087958410439904027681253468301078750230699580802092263827163725334247306381356893989870114532424215277499138976365201829903815469620298491641428915161687991607266300628523977928893090933015332499622783262552991550676946456477005981405400726327752157439494461698185446526847091073711240134
pad4=629506930602667875576914371174497154359001277676139172144203391682219137507215430044738261553444889355827543103194885152901243068673745676365858752805912120858925057071656074516156988443063010655936881915795785710270646348881514600798865055995233788166292892332275521611023593040021596593160152622999514178432599207800306443844998131607046588207563132737543978001058849679063400643534761017222494597097036207576906550241479365739193553366478435335454150547508941668441823798611436732597828882895229598343980068038865739565430964344454349597030985617275495359442276041104992719252010117155672342089629110094342152955

def gcd(a,b):
    # custom GCD implementation because Sage's one apparently doesn't work here
    while b:
        a, b = b, a % b
    return a.monic()

e=11


P.<x> = PolynomialRing(Zmod(N))
p1 = (pad1 * x + pad2) ^ e - ct1
p2 = (pad3 * x + pad4) ^ e - ct2
result = -gcd(p1, p2).coefficients()[0]
result
'''
from Crypto.Util.number import long_to_bytes

print(long_to_bytes(754659823705280937426684693543545157731789888997963325308215810880829655843345426301))
